@model IEnumerable<Domain.Models.Poll>

@{
    ViewData["Title"] = "Polls";
}
<div class="row mb-4 align-items-center">
    <div class="col">
        <h2 class="mb-0">Active Polls</h2>
    </div>
    <div class="col-auto">
        <a href="/Poll/Create" class="btn btn-primary">Add Poll</a>
    </div>
</div>


<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">


    @foreach (var poll in Model)
    {
        var totalVotes = (poll.Option1VotesCount + poll.Option2VotesCount + (poll.Option3VotesCount ?? 0));
        <div class="col">
            <div class="card shadow-lg h-100 border border-dark poll-card">
                <div class="card-body d-flex flex-column justify-content-between">
                    <div>
                        <h5 class="card-title">@poll.Title</h5>
                        <p class="card-text text-muted">@poll.Description</p>
                        <span class="badge bg-info text-dark mb-2">Votes: @totalVotes</span>
                        <br />
                        <small class="text-muted">Created by: <strong>@poll.Author?.Email</strong></small>
                        <br />
                        <small class="text-muted">Posted: @poll.DateCreated.ToString("dd MMM yyyy")</small>
                    </div>
                    <div class="mt-3 d-flex justify-content-between">
                        <a class="btn btn-primary btn-sm" href="/Poll/Vote?pollId=@poll.Id">🗳️ Vote</a>
                        <a class="btn btn-outline-secondary btn-sm" href="#">📊 Results</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .poll-card {
        transition: transform 0.25s ease, box-shadow 0.25s ease;
    }

        .poll-card:hover {
            transform: scale(1.02);
            box-shadow: 0 0 30px rgba(0, 0, 0, 0.2); /* stronger shadow */
            border-color: #333 !important; /* darker border on hover too */
        }
</style>

