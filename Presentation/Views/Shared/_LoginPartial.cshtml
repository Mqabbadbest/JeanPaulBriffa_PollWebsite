@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav ms-auto d-flex flex-row align-items-center gap-3">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item text-dark d-flex align-items-center">
            <i class="fas fa-user-circle me-1"></i> @UserManager.GetUserName(User)
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0 d-flex align-items-center">
                    <i class="fas fa-sign-out-alt me-1"></i> Logout
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark d-flex align-items-center" id="login" asp-area="Identity" asp-page="/Account/Login">
                <i class="fas fa-sign-in-alt me-1"></i> Login
            </a>
        </li>
    }
</ul>


